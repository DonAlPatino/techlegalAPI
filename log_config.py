import asyncio
import logging
import sys
from pathlib import Path
from easy_async_tg_notify import Notifier
from typing import Optional
from telegram import send_msg


class TelegramLogHandler(logging.Handler):
    """–ö–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Telegram —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º —É—Ä–æ–≤–Ω–µ–º"""

    def __init__(self, notifier: Notifier, chat_id: int, min_level=logging.INFO):
        super().__init__(level=min_level)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
        self.notifier = notifier
        self.chat_id = chat_id
        self.level_emojis = {
            logging.INFO: "‚ÑπÔ∏è",
            logging.WARNING: "‚ö†Ô∏è",
            logging.ERROR: "‚ùå",
            logging.CRITICAL: "üî•"
        }
        self.formatter = logging.Formatter(
            fmt='%(levelname)s: %(message)s',
            datefmt='%Y-%m-%d %H:%M:%S'
        )

    def emit(self, record):
        try:
            emoji = self.level_emojis.get(record.levelno, "üìå")
            msg = f"{emoji} {self.format(record)}"
            asyncio.run(send_msg(f"<pre>" + msg + "</pre>"))
        except Exception as e:
            print(f"Telegram send failed: {e}")


def setup_logging(
        telegram_notifier: Optional[Notifier] = None,
        telegram_chat_id: Optional[int] = None,
        telegram_min_level: int = logging.INFO  # –ù–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —É—Ä–æ–≤–Ω—è
):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ —Å –≥–∏–±–∫–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Telegram"""
    logger = logging.getLogger(__name__)
    logger.setLevel(logging.DEBUG)

    # –ë–∞–∑–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä
    formatter = logging.Formatter(
        fmt='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )

    # –ö–æ–Ω—Å–æ–ª—å (—Ç–æ–ª—å–∫–æ INFO+)
    console_handler = logging.StreamHandler(sys.stdout)
    console_handler.setLevel(logging.INFO)
    console_handler.setFormatter(formatter)

    # –§–∞–π–ª (–≤—Å–µ —É—Ä–æ–≤–Ω–∏)
    Path("logs").mkdir(exist_ok=True)
    file_handler = logging.FileHandler("logs/app.log", encoding='utf-8')
    file_handler.setLevel(logging.DEBUG)
    file_handler.setFormatter(formatter)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    handlers = [console_handler, file_handler]

    # Telegram (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
    if telegram_notifier and telegram_chat_id:
        telegram_handler = TelegramLogHandler(
            notifier=telegram_notifier,
            chat_id=telegram_chat_id,
            min_level=telegram_min_level  # –ü–µ—Ä–µ–¥–∞–µ–º –Ω—É–∂–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
        )
        handlers.append(telegram_handler)

    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö
    logger.handlers.clear()
    for handler in handlers:
        logger.addHandler(handler)

    return logger


# –ü—Ä–∏–º–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
app_logger = setup_logging()
